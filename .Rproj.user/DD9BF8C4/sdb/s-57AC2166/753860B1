{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(COVID19)\nlibrary(padr)\nlibrary(lubridate)\nlibrary(progress)\nlibrary(RcppRoll)\nlibrary(parallel)\n\n\nset.seed(195893)\n\n\nsource(\"scripts/utils.R\")\n\n\n# load data ---------------------------------------------------------------\n\n# Get all countries\nworld <- covid19()\n\n# Get state level for specific countries\nssc <- c(\"South Africa\", \"India\", \"Sweden\", \"United States\", \"Canada\", \n         \"Switzerland\", \"Australia\", \"Italy\", \"United Kingdom\", \"Brazil\")\nregions_to_exclude <- c(\"Montserrat\", \"Turks and Caicos Islands\", \n                        \"Falkland Islands (Malvinas)\", \"British Virgin Islands\", \n                        \"Appenzell Innerrhoden\", \"Yukon\", \"Prince Edward Island\", \n                        \"Mizoram\", \"Benin\", \n                        \"Brunei\", \"Comoros\", \"Dominica\", \"Eritrea\", \n                        \"Fiji\", \"Grenada\", \"Holy See\", \"Northern Mariana Islands\", \n                        \"Saint Lucia\", \"Seychelles\", \"Western Sahara\", \"Virgin Islands\") \nstates <- covid19(country=ssc, level=2) %>% \n  filter(!(administrative_area_level_1 %in% regions_to_exclude)) %>% \n  filter(!(administrative_area_level_2 %in% regions_to_exclude))\n\n# Counties within the US\ncounties <- covid19(country=\"United States\", level=3)\n\n# bind levels together and world level data together to process together \nworld <- bind_rows(world, states, counties)\n\n# Process data\nworld <- world %>% \n  group_by(id) %>% \n  pad() %>% \n  mutate(new_confirmed = confirmed - lag(confirmed)) %>% \n  ungroup() %>% \n  filter(new_confirmed >= 0) %>% \n  filter(date < Sys.Date()-days(1)) %>% # exclude last day as seems to have  reporting lag \n  dplyr::select(date, id, deaths, confirmed, new_confirmed, population, contains(\"administrative\")) %>% \n  filter(!is.na(date))\n\n# NBSS growth rate estimation -----------------------------------------------------------\n\n## IF DISPERSIONS NEED TO BE CALCULATED\nif (compute_dispersions){\n  fits <- covid19_nbss(world, mc.cores=7)\n  save(fits, file=\"fits.RData\")\n  fits %>%\n    group_by(id) %>%\n    summarise(dispersion=unique(dispersion)) %>%\n    write_csv(\"data/precomputed_dispersion.csv\")\n}\n## IF PRECOMPUTED DISPERSIONS ARE PRESENT \n# Load pre-computed nb dispersion parameters\ndispersions <- read.csv(\"data/precomputed_dispersion.csv\")\n\n# run in parallel with pre-computed dispersions\nfits <- covid19_nbss(world, mc.cores=1, precomputed_dispersions = dispersions)\n\nsave(fits, file=\"data/fits.RData\")\n# load(\"fits.RData\")\n\n\n\n# Write important chunks into csv ---------------------------------------------\n\nfits <- as.data.table(fits)\nfits[,country:=administrative_area_level_1]\nfits[,state:=administrative_area_level_2]\nfits[,county:=administrative_area_level_3]\nfits[,deaths_pc:=deaths/population]\n\n\nfits[administrative_area_level==1] %>%\n  write.csv('data/nbss_countries.csv')\n\nfits[country=='United States' & administrative_area_level==2] %>%\n  write.csv('data/nbss_us_states.csv')\n\nfits[country=='Sweden' & administrative_area_level==2] %>%\n  write.csv('data/nbss_sweeden_states.csv')\n\nfits[country=='United States' & administrative_area_level==3] %>%\n  write.csV('data/nbss_us_counties.csv')",
    "created" : 1598552577645.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "245770681",
    "id" : "753860B1",
    "lastKnownWriteTime" : 1598552591,
    "last_content_update" : 1598552591335,
    "path" : "~/COVID/covid_r_v_D/scripts/nbss_smoothing_for_phase.R",
    "project_path" : "scripts/nbss_smoothing_for_phase.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}