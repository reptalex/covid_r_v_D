{
    "collab_server" : "",
    "contents" : "rm(list=ls())\ngc()\nlibrary(magrittr)\nlibrary(ggpubr)\nlibrary(data.table)\nlibrary(COVID19)\nlibrary(zoo)\nlibrary(mgcv)\nlibrary(EpiEstim)\nsource('scripts/utils.R')\n\n\n\n\n\n\n\n\n# R_e ---------------------------------------------------------------------\n\n# \n# x <- seird(log(2)/2.6)\n# \n# # https://wwwnc.cdc.gov/eid/article/26/6/20-0357_article SI: mean SI = 3.96, sd=4.75\n# \n# ### following Gostic et al.'s implementation of Cori et al.\n# out <- estimate_R(x$new_confirmed,\n#            method='parametric_si',\n#            config = make_config(\n#              list(\n#                mean_si = 3.96,\n#                std_si = 4.75\n#              )\n#            ))\n# \n# \n# plot(out$dates[8:nrow(x)],log(out$R$`Mean(R)`))\n# lines(x$day[1:(nrow(x)-7)],x$rt[1:(nrow(x)-7)])\n# out$R %>%\n#   mutate(time = if(wend == TRUE) t_end else ceiling((t_end+t_start)/2) ) %>%\n#   select(time, `Mean(R)`, `Quantile.0.025(R)`, `Quantile.0.975(R)`) %>%\n#   setNames(c('time', paste0(out_name, '.mean'), paste0(out_name, '.025'), paste0(out_name, '.975')))\n\n# transmission rate -------------------------------------------------------\n\nS0=3.27e8\ngrowth_rates=log(2)/c(2,5,10)\nx <- NULL\nfor (r in growth_rates){\n  x <- rbind(x,seird(r,days=400))\n}\n\nx[,doubling_time:=factor(round(log(2)/r))]\n\ng1=ggplot(x,aes(deaths_pc,growth_rate,by=doubling_time,color=doubling_time))+\n  geom_line(lwd=2)+\n  scale_x_continuous('Deaths per capita',trans='log',breaks=10^(-8:1),limits=c(1e-8,0.1))+\n  scale_y_continuous('Inferred Growth Rate',limits=c(-0.2,1.2*max(x$r)))+\n  ggtitle('Epidemics over Deaths per-capita')+\n  geom_vline(lty=2,xintercept = 0.004)\n\ng2=ggplot(x,aes(date,new_confirmed/S0,by=doubling_time,color=doubling_time))+\n  geom_line(lwd=2)+\n  scale_y_continuous('Cases per capita')+\n  ggtitle('Epidemics over Time')\n\nggarrange(g2,g1,nrow=2)\nggsave('figures/epidemics_over_time_and_deaths.png',height=10,width=11,units='in')\n\n\n\n\nggplot(x[date>as.Date('2020-02-01')],aes(date,shift(rt,16),color=doubling_time))+\n  geom_line(lwd=2)+\n  geom_line(aes(date,growth_rate),lwd=2,lty=2,col='black')+\n  facet_wrap(.~doubling_time)+\n  scale_y_continuous(limits=c(-0.3,1))+\n  ggtitle('Suitability of rolling Poisson glm to estimate r(t)')\nggsave('figures/suitability_of_nbss_estimates_of_rt.png',height=8,width=11,units='in')\n\n\nmx <- x[,list(day=day[which.max(I)],\n              deaths_pc=deaths_pc[which.max(I)],\n              rt=rt[which.max(I)],\n              date=date[which.max(I)]),by=doubling_time]\n\ng_dt=ggplot(x,aes(day,deaths_pc,by=doubling_time,color=doubling_time))+\n  geom_line(lwd=2)+\n  geom_point(data=mx,cex=7,pch=19)\ng_dt_log <- g_dt+scale_y_continuous(trans='log',breaks=10^(-8:0))\nggarrange(g_dt,g_dt_log,nrow=2)\nggsave('figures/death_time_scaling_with_peak_days.png',height=10,width=11,units='in')\n\n \n# x[,doubling_time:=factor(doubling_time,levels =rev(c(2,3,5,7,10,14)))]\n# g_i=ggplot(x[date>as.Date('2020-02-15') & date<as.Date('2020-11-01')],\n#            aes(date,new_confirmed/S0,by=doubling_time,color=doubling_time))+\n#   geom_line(lwd=2)+\n#   scale_y_continuous('Cases per capita')+\n#   ggtitle('Epidemics over Time')\n# g_rt=ggplot(x[date>as.Date('2020-02-15') & date<as.Date('2020-11-01')],\n#             aes(date,growth_rate,by=doubling_time,color=doubling_time))+\n#   geom_hline(lwd=2,col='black',yintercept = 0)+\n#   geom_line(lwd=2)+\n#   scale_y_continuous('Estimated Exponential Growth Rate, r(t)',limits = c(-1/7,log(2)))+\n#   ggtitle('Growth Rate over Time')\n# \n# \n# \n# ggarrange(g_i,g_rt,nrow=2)\n# \n# \n# x[abs(growth_rate)>1,growth_rate:=NA]\n\n\n\n# NY analysis -------------------------------------------------------------\nUS <- COVID19::covid19(country='United States',level=2) %>% as.data.table\nUS[,state:=administrative_area_level_2]\nNY <- US[state=='New York']\nsetkey(NY,date)\n\nNY[,new_deaths:=c(deaths[1],diff(deaths))]\n\nggplot(NY[date<as.Date('2020-05-01')],aes(date,new_deaths))+\n  geom_point()+\n  scale_y_continuous(trans='log')\n\ngr <- glm(new_deaths~date,family=poisson,data=NY[date>as.Date('2020-03-15') & date<as.Date('2020-04-02')])\n\nNY[,new_confirmed:=c(confirmed[1],diff(confirmed))]\nNY <- nbss(NY)\nNY <- as.data.table(NY)\nNY[,intervention_efficacy:='NY State']\nNY[,deaths_pc:=deaths/population]\n\n# interventions -----------------------------------------------------------\nNY[date>as.Date('2020-03-15') & date<as.Date('2020-04-02'),growth_rate]\n\nS0=19.54e6\n# intervention_efficacies=seq(0,1,by=0.2)\nintervention_efficacies <- c(0,0.25,0.5,0.75,1)\nintervention_deaths=1\ny <- NULL\n\nr <- 0.2585 ## New York value obtained above\nr=0.3\nfor (a in intervention_efficacies){\n  y <- rbind(y,seird(r,intervention_efficacy = a,cfr=1e-3,\n                     intervention_deaths = intervention_deaths,days=400,\n                     S0=S0))\n}\n\n\ny[,doubling_time:=log(2)/(r*intervention_efficacy)]\ny[,intervention_efficacy:=factor(intervention_efficacy)]\n\nggplot(y,aes(deaths_pc,growth_rate,by=intervention_efficacy,color=intervention_efficacy))+\n  geom_line(lwd=2)+\n  geom_line(aes(deaths_pc,shift(rt,16)),lty=2)+\n  geom_vline(xintercept = intervention_deaths/S0,lwd=2,lty=2)+\n  geom_line(data=NY,aes(deaths_pc,shift(growth_rate,10)),col='black')+\n  scale_x_continuous('Deaths per capita',trans='log',breaks=10^(-8:0),limits=c(1e-6,3e-3))+\n  scale_y_continuous('Inferred Growth Rate',limits=c(-0.2,0.5))+\n  ggtitle('Early Intervention')\n\nggsave('figures/nbss_inference_under_instantaneous_intervention.png',height=8,width=11)\n\nggplot(y,aes(deaths_pc,beta,by=intervention_efficacy,color=intervention_efficacy))+\n  geom_line(lwd=2)+\n  geom_vline(xintercept = intervention_deaths/S0)+\n  scale_x_continuous(trans='log')\n\ng_early=ggplot(y,aes(deaths_pc,growth_rate,by=intervention_efficacy,color=intervention_efficacy))+\n  geom_line(lwd=2)+\n  geom_vline(xintercept = intervention_deaths/S0,lwd=2,lty=2)+\n  scale_x_continuous('Deaths per capita',trans='log',breaks=10^(-8:0),limits=c(1e-8,1.1*max(y$deaths_pc)))+\n  scale_y_continuous('Inferred Growth Rate',limits=c(-0.2,1.2*max(y$r)))+\n  ggtitle('Early Intervention')\ng_early\n\n\n\nS0=19.54e6\nintervention_efficacies=seq(0,1,by=0.2)\nintervention_deaths=100\ny <- NULL\nfor (a in intervention_efficacies){\n  y <- rbind(y,seird(r,intervention_efficacy = a,\n                     intervention_deaths = intervention_deaths,\n                     days=400,S0=S0))\n}\n\n\ny[,intervention_efficacy:=factor(intervention_efficacy)]\n\n\ng_late=ggplot(y,aes(deaths_pc,growth_rate,by=intervention_efficacy,color=intervention_efficacy))+\n  geom_line(lwd=2)+\n  geom_vline(xintercept=intervention_deaths/S0,lty=3,lwd=2)+\n  scale_x_continuous('Deaths per capita',trans='log',breaks=10^(-8:0),limits=c(1e-8,1.1*max(y$deaths_pc)))+\n  scale_y_continuous('Inferred Growth Rate',limits=c(-0.2,1.2*max(y$r)))+\n  ggtitle('Late Intervention')\n\n\nggarrange(g_early,g_late,nrow=2)\nggsave('figures/early_vs_late_intervention.png',height=10,width=12,units='in')\n\n\n# Relaxation --------------------------------------------------------------\nS0=19.54e6\nintervention_efficacy <- 0.7\nintervention_deaths=1\nrelaxation_deaths=c(2,20,200,2000,6000,Inf)\nshift_deaths=0\n\n\ny <- seird(r=log(2)/3,days=400,S0=S0)\ny[,relaxation_deaths:=0]\nfor (b in relaxation_deaths){\n  y <- rbind(y,seird(r=log(2)/3,intervention_efficacy = intervention_efficacy,\n                     intervention_deaths = intervention_deaths,\n                     relaxation_deaths=b,\n                     days=400,S0=S0))\n}\n\nif (shift_deaths!=0){\n  y[,deaths_pc:=shift(deaths_pc,shift_deaths,type='lead'),by=relaxation_deaths]\n}\n\nz <- seird(r=0.15,S0=S0,intervention_deaths = intervention_deaths,intervention_efficacy = 0.7,\n           relaxation_deaths=2000,days = 400)\nz[,relaxation_deaths:='Slower Growth']\n\n\nif (shift_deaths!=0){\n  z[,deaths_pc:=shift(deaths_pc,shift_deaths,type='lead')]\n}\n\n\ny[,relaxation_deaths:=factor(relaxation_deaths)]\nggplot(y,aes(deaths_pc,growth_rate,by=relaxation_deaths,color=relaxation_deaths))+\n  geom_line(lwd=2)+\n  geom_vline(xintercept=intervention_deaths/S0,lty=3,lwd=2)+\n  scale_x_continuous('Deaths per capita',trans='log',breaks=10^(-8:0),limits=c(1e-8,1.1*max(y$deaths_pc)))+\n  scale_y_continuous('Inferred Growth Rate',limits=c(-0.11,1.2*max(y$r)))+\n  # geom_line(data=z,col='black',lty=2,lwd=2)+\n  ggtitle('Relaxation of Interventions')+\n  geom_vline(xintercept = 4e-3)\nif(shift_deaths!=0){\n  ggsave('figures/relaxation_of_interventions_70prc_effective_to_complete_relax_shifted.png',height=8,width=11,units='in')\n} else {\n  ggsave('figures/relaxation_of_interventions_70prc_effective_to_complete_relax.png',height=6,width=11,units='in')\n}\ny[relaxation_deaths==S0*1e-5] %>%\n  ggplot(aes(date,new_confirmed))+\n  geom_line(lwd=2)\n\nggplot(y,aes(date,new_confirmed,color=relaxation_deaths))+\n  geom_line(lwd=2)+\n  facet_wrap(.~relaxation_deaths)\n\n\n\n\nswd <- y[relaxation_deaths==S0*1e-4 & D<relaxation_deaths,max(date)]\ny[relaxation_deaths==S0*1e-4] %>%\n  ggplot(aes(date,rt))+\n  geom_line()+\n  geom_vline(xintercept = swd)\n\n  \n\n# impact of death lag + infectious period ---------------------------------\n\n\nS0=3.27e8\ninfectious_periods=c(2,4,10)\nx <- NULL\nfor (infper in infectious_periods){\n  dum <- seird(r=log(2)/2,gamma=1/infper,days=200)\n  dum[,infectious_period:=infper]\n  x <- rbind(x,dum)\n}\n\n\nx[,infectious_period:=factor(infectious_period)]\ng_inf=ggplot(x,aes(deaths_pc,growth_rate,\n             by=infectious_period,\n             color=infectious_period))+\n  geom_line(lwd=2)+\n  scale_x_continuous(trans='log',limits=c(1e-8,.1),breaks=10^(-8:1))+\n  scale_y_continuous(limits=c(-0.6,0.4))+\n  ggtitle('Varying Infectious Period')\ng_inf\nggsave('figures/varying_infections_period.png',height=8,width=11,units='in')\n\n\n\n# Best way to estimate r? -------------------------------------------\ncfr=c(0.1,0.4,1,10)/100\nx <- NULL\nfor (cc in cfr){\n  dum <- seird(r=log(2)/3,cfr=cc,days=400)\n  x <- rbind(x,dum)\n}\n\n\nx[,cfr:=factor(cfr)]\ng_ifr=ggplot(x,aes(deaths_pc,growth_rate,\n             by=cfr,\n             color=cfr))+\n  geom_line(lwd=2)+\n  scale_x_continuous(trans='log',limits=c(1e-8,0.1),breaks=10^(-8:1))+\n  scale_y_continuous('IFR',limits=c(-0.2,0.4))+\n  ggtitle('Varying Infection Fatality Rate')\ng_ifr\nggsave('figures/varying_ifr.png',height=8,width=11,units='in')\n\n\n\n# incubation period -------------------------------------------------------\n\na=c(1,3,7,10)\nx <- NULL\nfor (aa in a){\n  dum <- seird(r=log(2)/3,a=1/aa)\n  dum[,incubation_period:=aa]\n  x <- rbind(x,dum)\n}\n\nx[,incubation_period:=factor(incubation_period)]\n\ng_inc=ggplot(x,aes(deaths_pc,growth_rate,\n                   by=incubation_period,\n                   color=incubation_period))+\n  geom_line(lwd=2)+\n  scale_x_continuous(trans='log',limits=c(1e-8,0.1),breaks=10^(-8:1))+\n  scale_y_continuous('IFR',limits=c(-0.2,0.4))+\n  ggtitle('Varying Infection Fatality Rate')\ng_inc\nggsave('figures/varying_incubation_period.png',height=8,width=11,units='in')\n\n\nggarrange(g1+ggtitle('Varying growth rate'),g_ifr,g_inf,g_inc,nrow=4)\n\n\n\n# intervention + relaxation -----------------------------------------------\n\n\n\n# lags --------------------------------------------------------------------\n\n### impact of death/case lag on curves\n# \n# r <- log(2)/2.6\n# x <- seird(r)\n# x[,death_offset:=0]\n# XX <- x\n# for (ll in seq(1,19,by=3)){\n#   dum <- x\n#   dum$deaths_pc=shift(dum$deaths_pc,n=ll,type = 'lead')\n#   dum$death_offset=ll\n#   XX <- rbind(XX,dum)\n# }\n\n# XX[,death_offset:=factor(death_offset)]\n# ggplot(XX,aes(deaths_pc,growth_rate,by=death_offset,color=death_offset))+\n#   geom_line(lwd=3)+\n#   geom_line(data=XX[death_offset==13],lwd=1,col='black',lty=2)+\n#   scale_y_continuous(limits=c(-0.2,0.6))\n# \n# lag_finder <- function(deaths,cases,maxlag=30){\n#   lags <- 0:maxlag\n#   tvals <- rep(NA,maxlag+1)\n#   for (ll in lags){\n#     lagged_deaths <- shift(deaths,n=ll,type='lead')\n#     gg=gam(cases~lagged_deaths,family = nb)\n#     ss <- summary(gg)\n#     tvals[ll+1] <- ss$p.t['lagged_deaths']\n#   }\n#   \n#   best_lag <- lags[which.max(tvals)]\n#   return(best_lag)\n# }\n",
    "created" : 1598300486540.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "577178646",
    "id" : "1C334B29",
    "lastKnownWriteTime" : 1598395282,
    "last_content_update" : 1598395299202,
    "path" : "~/COVID/covid_r_v_D/scripts/r_v_D_sims.R",
    "project_path" : "scripts/r_v_D_sims.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}