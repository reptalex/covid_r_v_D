install.packages('EpiEstimR')
install.packages('EpiEstim')
install.packages('backports')
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
install.packages('EpiEstim')
library(magrittr)
library(ggpubr)
install.packages('ggpubr')
library(ggpubr)
library(data.table)
library(COVID19)
install.packages('COVID19')
library(zoo)
install.packages('zoo')
library(mgcv)
library(EpiEstim)
rm(list=ls())
gc()
library(magrittr)
library(ggpubr)
library(data.table)
library(COVID19)
library(zoo)
library(mgcv)
library(EpiEstim)
source('scripts/seir_functions.R')
install.packages('deSolve')
x <- seird(log(2)/2.6)
source('scripts/seir_functions.R')
install.packages('KFAS')
source('scripts/seir_functions.R')
install.packages('tidyverse')
source('scripts/seir_functions.R')
install.packages('tsoutliers')
source('scripts/seir_functions.R')
x <- seird(log(2)/2.6)
out <- estimate_R(x$new_confirmed,
method='uncertain_si',
config = make_config(
list(
mean_si = 4,
min_mean_si = SI_mean -1,
max_mean_si = SI_mean + 4,
std_mean_si = 1.5,
std_std_si = 1.5,
std_si = 4.75,
min_std_si = sqrt(2)*.8,
max_std_si = sqrt(2)*1.2,
n1 = 50,
n2 = 100,
t_start=1,
t_end=10
)
))
out <- estimate_R(x$new_confirmed,
method='uncertain_si',
config = make_config(
list(
mean_si = 4,
min_mean_si = 3.5,
max_mean_si = 5,
std_mean_si = 1.5,
std_std_si = 1.5,
std_si = 4.75,
min_std_si = sqrt(2)*.8,
max_std_si = sqrt(2)*1.2,
n1 = 50,
n2 = 100,
t_start=1,
t_end=10
)
))
make_config(
list(
mean_si = 4,
min_mean_si = 3.5,
max_mean_si = 5,
std_mean_si = 1.5,
std_std_si = 1.5,
std_si = 4.75,
min_std_si = sqrt(2)*.8,
max_std_si = sqrt(2)*1.2,
n1 = 50,
n2 = 100,
t_start=1,
t_end=10
)
)
out <- estimate_R(x$new_confirmed[1:10],
method='uncertain_si',
config = make_config(
list(
mean_si = 4,
min_mean_si = 3.5,
max_mean_si = 5,
std_mean_si = 1.5,
std_std_si = 1.5,
std_si = 4.75,
min_std_si = sqrt(2)*.8,
max_std_si = sqrt(2)*1.2,
n1 = 50,
n2 = 100,
t_start=1,
t_end=10
)
))
X <- read.csv('data/nbss_countries.csv') %>% as.data.table
NY <- read.csv('data/nbss_us_states.csv') %>% as.data.table
NY <- NY[administrative_area_level_2=='New Yokr']
NY <- NY[administrative_area_level_2=='New York']
X[,deaths_pc:=deaths/population]
NY[,deaths_pc:=deaths/population]
rm(list=ls())
gc()
library(magrittr)
library(ggpubr)
library(data.table)
library(COVID19)
library(zoo)
library(gganimate)
setwd('~/COVID/deaths_vs_growth_rate/')
window_size=21
# growth_rate vs. cumulative incidence ------------------------------------------------------------------------
getGrowthRate <- function(n,new_confirmed,date,day_of_week,z_score=FALSE){
dd <- data.table('new_confirmed'=new_confirmed,
'date'=date,
'day_of_week'=day_of_week)
fit <- glm(new_confirmed~date+day_of_week,family=poisson,data=dd[n])
# fit <- mgcv::gam(new_confirmed~date+day_of_week,family='nb',data=dd[n])
if (z_score){
if (!'gam' %in% class(fit)){
summary(fit)$coefficients['date','z value'] %>%
return
} else {
summary(fit)$p.t['date'] %>% return
}
} else {
return(coef(fit)['date'])
}
}
# USA ---------------------------------------------------------------------
USA <- covid19(country='United States',level=2) %>% as.data.table
colnames(USA)[colnames(USA)=='administrative_area_level_2'] <- 'state'
setkey(USA,state,date)
max(USA$date)
USA[,new_confirmed:=c(confirmed[1],diff(confirmed)),by=state]
USA[new_confirmed<0,new_confirmed:=0]
USA[,cumulative_pc_cases:=confirmed/population]
USA[,gr:=(new_confirmed+shift(new_confirmed)+shift(new_confirmed,n=3))/
(shift(new_confirmed,7)+shift(new_confirmed,8)+shift(new_confirmed,9)),by=state]
USA[,day_of_week:=weekdays(date)]
USA[,n:=1:.N,by=state]
USA[,new_deaths:=c(deaths[1],diff(deaths)),by=state]
USA[,growth_rate:=rollapply(n,width=window_size,FUN=getGrowthRate,fill=NA,
new_confirmed=new_confirmed,date=date,
day_of_week=day_of_week,align='right'),
by=state]
USA[,deaths_pc:=deaths/population]
x <- USA[,list(growth_rate=growth_rate[max(which(!is.na(growth_rate)))],
deaths_pc=deaths_pc[max(which(!is.na(growth_rate)))],
date=max(date),
id=unique(key_alpha_2)),by=state]
ggplot(USA,aes(deaths_pc,growth_rate,by=state,color=date))+
geom_line(lwd=2,alpha=0.2)+
geom_hline(yintercept = log(2)/7,lty=2)+
geom_hline(yintercept=0,lty=1)+
geom_point(data=x,cex=2,color='red')+
geom_text(data=x,aes(label=id),hjust=-0.3, vjust=-0.3,color='red')+
scale_y_continuous('Exponential (Poisson) Growth Rate',limits=c(-0.25,0.5))+
theme_bw()+
ggtitle(paste('Incidence vs Growth rate as of',max(X$date)))+
guides(colour = guide_legend(override.aes = list(size=8)))+
theme(legend.position = 'none')+
scale_x_continuous('Cumulative deaths per Capita',trans='log',limit=c(1e-7,4e-3),breaks=10^(-8:-1))
# world -------------------------------------------------------------------
X <- covid19(level=1) %>% as.data.table
colnames(X)[colnames(X)=='administrative_area_level_1'] <- 'country'
setkey(X,country,date)
install.packages('gganimate')
